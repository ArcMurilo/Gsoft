unit WinCash.Business.Desconto.AliquotaGeral;

interface

uses
  WinCash.Business.Desconto.AliquotaDesconto;

type
  TDescontoAliquotaGeral = class
  private
    FAliquotaDescontoMaximo : TAliquotaDesconto;
    procedure setAliquotaDescontoMaximo(const Value: TAliquotaDesconto);
  public
    property aliquotaDescontoMaximo: TAliquotaDesconto read FAliquotaDescontoMaximo
      write setAliquotaDescontoMaximo;
    constructor Create(aAliquotaDescontoMaximo : TAliquotaDesconto);
    function descontoMaximo(valorTotalBruto : double) : double;
    function isValorLiquidoValido(valorTotalLiquido, valorTotalBruto: double) : boolean;
  end;

implementation

{ TDescontoAliquotaGeral }

constructor TDescontoAliquotaGeral.Create(aAliquotaDescontoMaximo: TAliquotaDesconto);
begin
  self.aliquotaDescontoMaximo := aAliquotaDescontoMaximo;
end;

function TDescontoAliquotaGeral.descontoMaximo(valorTotalBruto : double) : double;
begin
  result := valorTotalBruto * self.aliquotaDescontoMaximo.aliquota / 100;
end;

function TDescontoAliquotaGeral.isValorLiquidoValido(valorTotalLiquido, valorTotalBruto: double) : boolean;
begin
  result :=
    valorTotalLiquido >= valorTotalBruto - self.descontoMaximo(valorTotalBruto);
end;

procedure TDescontoAliquotaGeral.setAliquotaDescontoMaximo(const Value: double);
begin
  if (Value >= 0) and (Value <= 100) then
    FaliquotaDescontoMaximo := Value
  else
    FAliquotaDescontoMaximo := 0;
end;

end.
